#include <LittleFS.h>
#include <ESPAsyncWebServer.h>
#include "led.h"
#include "webserver.h"
#include "mywifi.h"

//pio run --target uploadfs
/* 
RGB led m≈±k√∂d√©se:
K√©k
 villog - AP m√≥dban van az eszk√∂z
 folyamatos - Valaki r√°kapcsol√≥dott
Z√∂ld
 villog - WiFi csatlakoz√°s sikertelen
 folyamatos - WiFi csatlakoz√°s sikeres
 Piros, s√°rga, mit tudom √©n...
 egy√©b hiba - m√©g ki kell tal√°lni.
*/
WiFiSettings settings;
const int buttonPin = 34; // vagy m√°s szabad GPIO

bool wifiSettingsExists = false; // jelzi, hogy van-e Wi-Fi be√°ll√≠t√°s
AsyncWebServer server(80);


void setup() {
  Serial.begin(115200);
  ledInit();
  pinMode(buttonPin, INPUT);  // bels≈ë felh√∫z√≥

  if (!LittleFS.begin()) {
    Serial.println("‚ùå LittleFS ind√≠t√°sa sikertelen");
    return;
  }
  Serial.println("‚úÖ LittleFS ind√≠tva");
  wifiSettingsExists = LittleFS.exists("/wifi.json");
  settings = loadWiFiSettings();

  if (!connectToWiFi(settings) && !settings.connectedOnce) {
    Serial.println("‚ùå Nem siker√ºlt csatlakozni a Wi-Fi-hez, ind√≠t√°s AP m√≥dban...");
    startAccessPoint();
  } 
  else {
    startMDNS();
  }

  setupWebServer();  // l√°sd lentebb
}

void loop() {
  static unsigned long buttonPressStart = 0;
  static bool buttonHeld = false;

  if (wifiSettingsExists && settings.connectedOnce) {
    reconnectIfNeeded(settings); // h√°tt√©r Wi-Fi √∫jracsatlakoz√°s, ha kell
  } /*else {
    dnsServer.processNextRequest();
  }*/

  int buttonState = digitalRead(buttonPin);

  if (buttonState == HIGH && !buttonHeld) {
    buttonPressStart = millis();
    buttonHeld = true;
  }

  if (buttonState == HIGH && buttonHeld) {
    if (millis() - buttonPressStart > 3000 && !apModeTriggered) { // 3 m√°sodperc
      Serial.println("üÜò Gomb hossz√∫ lenyom√°s ‚Äì AP m√≥d aktiv√°l√°sa!");
      
      WiFi.disconnect(true);
      delay(500);
      apModeTriggered = true;
      startAccessPoint();
    }
  }

  if (buttonState == LOW && buttonHeld) {
    buttonHeld = false;
  }

  // Egy√©b m≈±k√∂d√©s...
  delay(50); // kis k√©sleltet√©s a loop v√©g√©n
}
